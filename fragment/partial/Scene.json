{
  "properties": {
    "src": {
      "type": "string",
      "examples": [
        "https://storage.googleapis.com/mastory-content/test-ue-export/Nick's%20Room/SM_MERGED_Nicks_Room.gltf"
      ]
    },
    "clearColor": {
      "type": "array",
      "default": [
        0,
        0,
        0,
        0
      ]
    },
    "cameras": {
      "type": "object",
      "patternProperties": {
        "^\\w+$": {
          "oneOf": [
            {
              "$ref": "./camera-preset.json"
            },
            {
              "type": "object",
              "properties": {
"description": "Select one of the presets to define a baseline of camera properties. Setting other properties explicitly overrides preset defaults.",
                "preset": {
                  "$ref": "./camera-preset.json"
                },
"description": "The type of the camera. Choose \"ArcRotateCamera\" to rotate the camera around a single, displayed object; and \"UniversalCamera\" in all other cases.",
                "type": {
                  "type": "string",
                  "enum": [
                    "ArcRotateCamera",
                    "UniversalCamera"
                  ]
                },
"description": "Enable WASD and arrow keys to control the camera position.",
                "allowWalk": {
                  "type": "boolean"
                },
"description": "The near clipping plane. This value should be as high as possible – only decrease it if you need to render more objects very close to the camera.",
                "nearPlane": {
                  "type": "number"
                },
"description": "The far clipping plane. This value should be as low as possible – only increase it if you need to render more objects far away from the camera.",
                "farPlane": {
                  "type": "number"
                },
                "fieldOfView": {
                  "type": "number"
                },
                "position": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "minItems": 3,
                  "maxItems": 3,
                  "default": [
                    0,
                    0,
                    0
                  ]
                },
"description": "NOT YET IMPLEMENTED!",
                "rotation": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "minItems": 3,
                  "maxItems": 4,
                  "default": [
                    0,
                    0,
                    0,
                    0
                  ]
                },
"description": "A target point where the camera is looking at.",
                "target": {
                  "type": "array",
                  "items": {
                    "type": "number"
                  },
                  "minItems": 3,
                  "maxItems": 3,
                  "default": [
                    0,
                    0,
                    1
                  ]
                },
"description": "Only for \"type\": \"ArcRotateCamera\":  The constant distance between the camera and the target point.",
                "radius": {
                  "type": "number"
                },
"description": "If \"type\": \"UniversalCamera\", the speed at which the camera (i.e. the player) moves on user input. * If \"type\": \"ArcRotateCamera\", a nonzero speed will enable auto-rotation around the target; use negative speeds to  change the rotation direction.",
                "speed": {
                  "type": "number"
                },
"description": "Apply gravity to the camera's position.",
                "gravity": {
                  "type": "boolean"
                },
"description": "Check for collisions with the camera a.k.a. player. More precisely, if this is true, a player-sized ellipsoid  will be assumed around the camera against which collision with other scene nodes will be detected.",
                "collisionChecks": {
                  "type": "boolean"
                },
"description": "Apply post-processing filters to the camera picture.",
                "postProcess": {
                  "type": "object",
                  "properties": {
                    "parameters": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "shaderUrl": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                },
"description": "Bind unit variables to standard camera properties – either to individual numeric values  or to entire vectors, e.g. `position` and `rotation`.",
                "model": {
                  "type": "object",
                  "properties": {
"description": "The current camera position as an object with `x`, `y`, and `z` properties. */",
                    "position": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The `x` value of the current camera position.",
                    "positionX": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The `y` value of the current camera position.",
                    "positionY": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The `z` value of the current camera position.",
                    "positionZ": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The current camera rotation as an object with `x`, `y`, and `z` properties (Euler angles). */",
                    "rotation": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "NOT YET IMPLEMENTED! * The current camera rotation as a 4-element array representing a quaternion. * Prefer this value if you intend to copy the same rotation onto other objects  or combine (chain) it with other rotations. */",
                    "rotationQuaternion": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The `x` value of the current camera rotation (the \"pitch\" Euler angle).",
                    "rotationX": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The `y` value of the current camera rotation (the \"yaw\" Euler angle).",
                    "rotationY": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The `z` value of the current camera rotation (the \"roll\" Euler angle).",
                    "rotationZ": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The reverse `x` value of the current camera rotation (the negative \"pitch\" Euler angle).",
                    "rotationXReverse": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The reverse `y` value of the current camera rotation (the negative \"yaw\" Euler angle).",
                    "rotationYReverse": {
                      "$ref": "../../core/identifier.json"
                    },
"description": "The reverse `z` value of the current camera rotation (the negative \"roll\" Euler angle).",
                    "rotationZReverse": {
                      "$ref": "../../core/identifier.json"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          ]
        }
      }
    },
    "activeCamera": {
      "type": "string",
      "pattern": "^\\w+$"
    },
    "environmentTextureUrl": {
      "type": "string",
      "default": ""
    },
    "enviromentLightIntensity": {
      "type": "number",
      "default": 1
    },
    "enableToneMapping": {
      "type": "boolean",
      "default": false
    },
    "contrast": {
      "type": "number",
      "default": 1
    },
    "exposure": {
      "type": "number",
      "default": 1
    }
  },
  "required": []
}